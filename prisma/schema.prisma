generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Permission {
  id        Int      @id @default(autoincrement())
  name      String   @unique @db.VarChar(50)
  create_at DateTime @default(now())
  update_at DateTime @updatedAt

  roles Role[]
}

// "Admin", "Gestor", "Estudiante", "Mentor"
model Role {
  id        Int      @id @default(autoincrement())
  name      String   @unique @db.VarChar(50)
  create_at DateTime @default(now())
  update_at DateTime @updatedAt

  users       User[]
  permissions Permission[]
}

model User {
  id            String   @id @default(uuid()) //? UUID generado a nivel prisma ORM
  dni           String   @unique
  email         String   @unique
  first_name    String   @db.VarChar(50)
  last_name     String   @db.VarChar(50)
  password      String
  phone         String   @db.VarChar(20)
  birth_date    DateTime
  skills        String?
  linkedIn      String?
  roleId        Int
  institutionId Int
  create_at     DateTime @default(now())
  update_at     DateTime @updatedAt

  role        Role               @relation(fields: [roleId], references: [id])
  institution Institution        @relation(fields: [institutionId], references: [id])
  mentorships UserOnMentorship[]
}

model Mentorship {
  id            Int      @id @default(autoincrement())
  title         String
  description   String
  student_slots Int
  tags          String
  start_date    DateTime
  end_date      DateTime
  create_at     DateTime @default(now())
  update_at     DateTime @updatedAt

  users UserOnMentorship[]
}

model UserOnMentorship {
  id              Int      @id @default(autoincrement())
  userId          String
  mentorshipId    Int
  role            String
  student_grade   Int?
  mentor_comments String?
  create_at       DateTime @default(now())
  update_at       DateTime @updatedAt

  user       User       @relation(fields: [userId], references: [dni])
  mentorship Mentorship @relation(fields: [mentorshipId], references: [id])
}

model Institution {
  id   Int             @id @default(autoincrement())
  name String
  type TypeInstitution @default(POLO_IT)

  User User[]
}

enum TypeInstitution {
  POLO_IT
  ONG
  EMPRESA
}
